
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPREC_IFleftELSEAND AND_ASSIGN ASSIGN BREAK CHAR COMMA CONTINUE CVAL DEC DIVIDE DIVIDE_ASSIGN ELSE EQ FLOAT FOR FVAL GE GEQ ID IF INC INT IVAL LAND LBRACE LBRACK LE LEQ LNOT LOR LPAREN LSHIFT LSHIFT_ASSIGN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NE NOT OR OR_ASSIGN PLUS PLUS_ASSIGN RBRACE RBRACK RETURN RPAREN RSHIFT RSHIFT_ASSIGN SEMICOL SVAL TIMES TIMES_ASSIGN VOID WHILE XOR XOR_ASSIGNgoal : defgoal : def goaldef : defv\n           | deffdefv : type defv_multi SEMICOLdefv_multi : id_adv arraydefv_multi : id_adv assigndefv_multi : id_adv array COMMA defv_multidefv_multi : id_adv assign COMMA defv_multiid_adv : IDid_adv : TIMES id_advarray : emptyarray : LBRACK IVAL RBRACKdeff : type id_adv LPAREN s_args RPAREN LBRACE body RBRACEs_args : empty\n              | VOIDs_args : argsargs : argargs : arg COMMA argsarg : type id_adv arraybody : pre_defv_many pre_stmt_manypre_defv_many : emptypre_defv_many : defv_manydefv_many : defvdefv_many : defv defv_manypre_stmt_many : emptypre_stmt_many : stmt_manystmt_many : stmtstmt_many : stmt stmt_manystmt : SEMICOLstmt : LBRACE body RBRACEstmt : expr_many SEMICOLstmt : WHILE LPAREN expr_many RPAREN stmtstmt : FOR LPAREN expr_many SEMICOL expr_many SEMICOL expr_many RPAREN stmtstmt : IF LPAREN expr_many RPAREN stmt %prec PREC_IFstmt : IF LPAREN expr_many RPAREN stmt ELSE stmtstmt : CONTINUE SEMICOLstmt : BREAK SEMICOLstmt : RETURN SEMICOLstmt : RETURN expr_many SEMICOLpriexpr : IDpriexpr : constpriexpr : LPAREN expr_many RPARENpostexpr : priexprpostexpr : postexpr LBRACK expr_many RBRACKpostexpr : postexpr LPAREN RPARENpostexpr : postexpr LPAREN argexpr_list RPARENpostexpr : postexpr INC\n                | postexpr DECargexpr_list : exprargexpr_list : argexpr_list COMMA exprunaryexpr : postexprunaryexpr : AND unaryexprunaryexpr : TIMES unaryexprunaryexpr : INC unaryexpr\n                 | DEC unaryexpr\n                 | PLUS unaryexpr\n                 | MINUS unaryexpr\n                 | NOT unaryexpr\n                 | LNOT unaryexprmultexpr : unaryexprmultexpr : multexpr TIMES unaryexpr\n                | multexpr DIVIDE unaryexpr\n                | multexpr MOD unaryexpraddexpr : multexpraddexpr : addexpr PLUS multexpr\n               | addexpr MINUS multexprshiftexpr : addexprshiftexpr : shiftexpr LSHIFT addexpr\n                 | shiftexpr RSHIFT addexprrelexpr : shiftexprrelexpr : relexpr LE shiftexpr\n               | relexpr GE shiftexpr\n               | relexpr LEQ shiftexpr\n               | relexpr GEQ shiftexpreqexpr : relexpreqexpr : eqexpr EQ relexpr\n              | eqexpr NE relexprandexpr : eqexprandexpr : andexpr AND eqexprxorexpr : andexprxorexpr : xorexpr XOR andexprorexpr : xorexprorexpr : orexpr OR xorexprlandexpr : orexprlandexpr : landexpr LAND orexprlorexpr : landexprlorexpr : lorexpr LOR landexprexpr : lorexprexpr : postexpr assign_op exprexpr : TIMES unaryexpr assign_op exprassign_op : ASSIGN\n                 | PLUS_ASSIGN\n                 | MINUS_ASSIGN\n                 | TIMES_ASSIGN\n                 | DIVIDE_ASSIGN\n                 | MOD_ASSIGN\n                 | AND_ASSIGN\n                 | OR_ASSIGN\n                 | XOR_ASSIGN\n                 | LSHIFT_ASSIGN\n                 | RSHIFT_ASSIGNexpr_many : exprexpr_many : expr_many COMMA exprassign : ASSIGN exprtype : INT\n            | FLOAT\n            | CHAR\n            | VOIDconst : IVALconst : FVALconst : SVALconst : CVALempty :'
    
_lr_action_items = {'INT':([0,2,3,4,15,16,63,115,149,155,161,],[6,6,-3,-4,-5,6,6,6,6,-14,6,]),'FLOAT':([0,2,3,4,15,16,63,115,149,155,161,],[7,7,-3,-4,-5,7,7,7,7,-14,7,]),'CHAR':([0,2,3,4,15,16,63,115,149,155,161,],[8,8,-3,-4,-5,8,8,8,8,-14,8,]),'VOID':([0,2,3,4,15,16,63,115,149,155,161,],[9,9,-3,-4,-5,26,9,9,9,-14,9,]),'$end':([1,2,3,4,10,15,155,],[0,-1,-3,-4,-2,-5,-14,]),'ID':([5,6,7,8,9,14,15,21,23,26,29,30,35,39,40,41,52,57,58,59,60,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,124,127,144,146,147,148,149,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[13,-106,-107,-108,-109,13,-5,43,13,-109,13,13,43,43,43,43,43,43,43,43,43,43,43,43,43,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,-114,43,43,13,43,-22,-23,-24,43,43,-30,-114,43,-25,-32,43,43,43,-37,-38,-39,-31,-40,43,43,43,-33,-35,43,43,-36,43,-34,]),'TIMES':([5,6,7,8,9,14,15,21,23,26,29,30,34,35,36,38,39,40,41,43,44,46,47,48,49,52,56,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,123,124,126,127,139,140,141,142,143,144,146,147,148,149,150,151,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[14,-106,-107,-108,-109,14,-5,35,14,-109,14,14,-52,85,-61,-44,35,85,85,-41,-42,-110,-111,-112,-113,85,107,85,85,85,85,85,35,35,35,-48,-49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,85,-54,-52,85,-55,-56,85,85,85,85,85,-53,85,85,85,85,85,85,85,85,85,85,85,-57,-58,-59,-60,-114,-46,-54,35,-43,35,107,107,-62,-63,-64,14,35,-22,-23,-24,-45,-47,35,35,-30,-114,35,-25,-32,35,35,35,-37,-38,-39,-31,-40,35,35,35,-33,-35,35,35,-36,35,-34,]),'SEMICOL':([11,12,13,15,17,18,19,22,32,33,34,36,37,38,42,43,44,45,46,47,48,49,50,51,53,54,55,56,64,65,66,67,72,73,86,87,90,91,92,98,110,111,112,113,115,117,118,120,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,151,153,154,159,160,161,162,166,167,168,169,173,177,178,179,180,181,183,185,186,188,189,190,191,193,195,196,197,],[15,-114,-10,-5,-6,-7,-12,-11,-105,-89,-52,-61,-87,-44,-85,-41,-42,-83,-110,-111,-112,-113,-81,-79,-76,-71,-68,-65,-114,-8,-9,-13,-48,-49,-54,-52,-103,-55,-56,-53,-57,-58,-59,-60,-114,-88,-90,-46,-54,-86,-43,-84,-82,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,160,-22,-23,-24,-45,-47,-91,-104,160,-30,-114,173,177,178,179,-25,-32,-37,-38,-39,185,-31,187,-40,160,160,-33,192,-35,160,-36,160,-34,]),'LPAREN':([12,13,15,21,22,34,35,38,39,40,41,43,44,46,47,48,49,52,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,120,124,126,127,146,147,148,149,150,151,152,159,160,161,163,164,165,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[16,-10,-5,39,-11,71,39,-44,39,39,39,-41,-42,-110,-111,-112,-113,39,39,39,39,39,39,39,39,39,-48,-49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,39,71,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,-114,-46,39,-43,39,39,-22,-23,-24,-45,-47,39,39,-30,-114,174,175,176,39,-25,-32,39,39,39,-37,-38,-39,-31,-40,39,39,39,-33,-35,39,39,-36,39,-34,]),'LBRACK':([12,13,22,34,38,43,44,46,47,48,49,61,64,72,73,87,120,126,150,151,],[20,-10,-11,70,-44,-41,-42,-110,-111,-112,-113,20,20,-48,-49,70,-46,-43,-45,-47,]),'ASSIGN':([12,13,22,34,38,43,44,46,47,48,49,64,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[21,-10,-11,74,-44,-41,-42,-110,-111,-112,-113,21,-48,-49,74,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'COMMA':([12,13,17,18,19,22,28,32,33,34,36,37,38,42,43,44,45,46,47,48,49,50,51,53,54,55,56,61,64,67,72,73,86,87,89,90,91,92,98,110,111,112,113,114,117,118,119,120,121,122,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,153,154,162,170,180,182,183,184,190,194,],[-114,-10,29,30,-12,-11,63,-105,-89,-52,-61,-87,-44,-85,-41,-42,-83,-110,-111,-112,-113,-81,-79,-76,-71,-68,-65,-114,-114,-13,-48,-49,-54,-52,127,-103,-55,-56,-53,-57,-58,-59,-60,-20,-88,-90,127,-46,152,-50,-54,-86,-43,-84,-82,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,-91,-104,127,-51,127,127,127,127,127,127,]),'RPAREN':([13,16,19,22,24,25,26,27,28,33,34,36,37,38,42,43,44,45,46,47,48,49,50,51,53,54,55,56,61,67,71,72,73,86,87,89,90,91,92,98,110,111,112,113,114,116,117,118,120,121,122,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,153,154,170,182,184,194,],[-10,-114,-12,-11,62,-15,-16,-17,-18,-89,-52,-61,-87,-44,-85,-41,-42,-83,-110,-111,-112,-113,-81,-79,-76,-71,-68,-65,-114,-13,120,-48,-49,-54,-52,126,-103,-55,-56,-53,-57,-58,-59,-60,-20,-19,-88,-90,-46,151,-50,-54,-86,-43,-84,-82,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,-91,-104,-51,186,188,196,]),'LBRACE':([15,62,115,146,147,148,149,159,160,161,169,173,177,178,179,181,185,186,188,189,191,193,195,196,197,],[-5,115,-114,161,-22,-23,-24,161,-30,-114,-25,-32,-37,-38,-39,-31,-40,161,161,-33,-35,161,-36,161,-34,]),'WHILE':([15,115,146,147,148,149,159,160,161,169,173,177,178,179,181,185,186,188,189,191,193,195,196,197,],[-5,-114,163,-22,-23,-24,163,-30,-114,-25,-32,-37,-38,-39,-31,-40,163,163,-33,-35,163,-36,163,-34,]),'FOR':([15,115,146,147,148,149,159,160,161,169,173,177,178,179,181,185,186,188,189,191,193,195,196,197,],[-5,-114,164,-22,-23,-24,164,-30,-114,-25,-32,-37,-38,-39,-31,-40,164,164,-33,-35,164,-36,164,-34,]),'IF':([15,115,146,147,148,149,159,160,161,169,173,177,178,179,181,185,186,188,189,191,193,195,196,197,],[-5,-114,165,-22,-23,-24,165,-30,-114,-25,-32,-37,-38,-39,-31,-40,165,165,-33,-35,165,-36,165,-34,]),'CONTINUE':([15,115,146,147,148,149,159,160,161,169,173,177,178,179,181,185,186,188,189,191,193,195,196,197,],[-5,-114,166,-22,-23,-24,166,-30,-114,-25,-32,-37,-38,-39,-31,-40,166,166,-33,-35,166,-36,166,-34,]),'BREAK':([15,115,146,147,148,149,159,160,161,169,173,177,178,179,181,185,186,188,189,191,193,195,196,197,],[-5,-114,167,-22,-23,-24,167,-30,-114,-25,-32,-37,-38,-39,-31,-40,167,167,-33,-35,167,-36,167,-34,]),'RETURN':([15,115,146,147,148,149,159,160,161,169,173,177,178,179,181,185,186,188,189,191,193,195,196,197,],[-5,-114,168,-22,-23,-24,168,-30,-114,-25,-32,-37,-38,-39,-31,-40,168,168,-33,-35,168,-36,168,-34,]),'IVAL':([15,20,21,35,39,40,41,52,57,58,59,60,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,124,127,146,147,148,149,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,31,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,46,-114,46,46,46,-22,-23,-24,46,46,-30,-114,46,-25,-32,46,46,46,-37,-38,-39,-31,-40,46,46,46,-33,-35,46,46,-36,46,-34,]),'FVAL':([15,21,35,39,40,41,52,57,58,59,60,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,124,127,146,147,148,149,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-114,47,47,47,-22,-23,-24,47,47,-30,-114,47,-25,-32,47,47,47,-37,-38,-39,-31,-40,47,47,47,-33,-35,47,47,-36,47,-34,]),'SVAL':([15,21,35,39,40,41,52,57,58,59,60,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,124,127,146,147,148,149,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,-114,48,48,48,-22,-23,-24,48,48,-30,-114,48,-25,-32,48,48,48,-37,-38,-39,-31,-40,48,48,48,-33,-35,48,48,-36,48,-34,]),'CVAL':([15,21,35,39,40,41,52,57,58,59,60,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,124,127,146,147,148,149,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,-114,49,49,49,-22,-23,-24,49,49,-30,-114,49,-25,-32,49,49,49,-37,-38,-39,-31,-40,49,49,49,-33,-35,49,49,-36,49,-34,]),'AND':([15,21,34,35,36,38,39,40,41,43,44,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,123,124,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,146,147,148,149,150,151,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,52,-52,52,-61,-44,52,52,52,-41,-42,-110,-111,-112,-113,95,-79,52,-76,-71,-68,-65,52,52,52,52,52,52,52,52,-48,-49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,52,-54,-52,52,-55,-56,52,52,52,52,52,-53,52,52,52,52,52,52,52,52,52,52,52,-57,-58,-59,-60,-114,-46,-54,52,-43,52,95,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,52,-22,-23,-24,-45,-47,52,52,-30,-114,52,-25,-32,52,52,52,-37,-38,-39,-31,-40,52,52,52,-33,-35,52,52,-36,52,-34,]),'INC':([15,21,34,35,38,39,40,41,43,44,46,47,48,49,52,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,120,124,126,127,146,147,148,149,150,151,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,40,72,40,-44,40,40,40,-41,-42,-110,-111,-112,-113,40,40,40,40,40,40,40,40,40,-48,-49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,40,72,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-114,-46,40,-43,40,40,-22,-23,-24,-45,-47,40,40,-30,-114,40,-25,-32,40,40,40,-37,-38,-39,-31,-40,40,40,40,-33,-35,40,40,-36,40,-34,]),'DEC':([15,21,34,35,38,39,40,41,43,44,46,47,48,49,52,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,87,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,120,124,126,127,146,147,148,149,150,151,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,41,73,41,-44,41,41,41,-41,-42,-110,-111,-112,-113,41,41,41,41,41,41,41,41,41,-48,-49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,41,73,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,-114,-46,41,-43,41,41,-22,-23,-24,-45,-47,41,41,-30,-114,41,-25,-32,41,41,41,-37,-38,-39,-31,-40,41,41,41,-33,-35,41,41,-36,41,-34,]),'PLUS':([15,21,34,35,36,38,39,40,41,43,44,46,47,48,49,52,55,56,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,123,124,126,127,137,138,139,140,141,142,143,146,147,148,149,150,151,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,57,-52,57,-61,-44,57,57,57,-41,-42,-110,-111,-112,-113,57,105,-65,57,57,57,57,57,57,57,57,-48,-49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,57,-54,-52,57,-55,-56,57,57,57,57,57,-53,57,57,57,57,57,57,57,57,57,57,57,-57,-58,-59,-60,-114,-46,-54,57,-43,57,105,105,-66,-67,-62,-63,-64,57,-22,-23,-24,-45,-47,57,57,-30,-114,57,-25,-32,57,57,57,-37,-38,-39,-31,-40,57,57,57,-33,-35,57,57,-36,57,-34,]),'MINUS':([15,21,34,35,36,38,39,40,41,43,44,46,47,48,49,52,55,56,57,58,59,60,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,115,120,123,124,126,127,137,138,139,140,141,142,143,146,147,148,149,150,151,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,58,-52,58,-61,-44,58,58,58,-41,-42,-110,-111,-112,-113,58,106,-65,58,58,58,58,58,58,58,58,-48,-49,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,58,-54,-52,58,-55,-56,58,58,58,58,58,-53,58,58,58,58,58,58,58,58,58,58,58,-57,-58,-59,-60,-114,-46,-54,58,-43,58,106,106,-66,-67,-62,-63,-64,58,-22,-23,-24,-45,-47,58,58,-30,-114,58,-25,-32,58,58,58,-37,-38,-39,-31,-40,58,58,58,-33,-35,58,58,-36,58,-34,]),'NOT':([15,21,35,39,40,41,52,57,58,59,60,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,124,127,146,147,148,149,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,-114,59,59,59,-22,-23,-24,59,59,-30,-114,59,-25,-32,59,59,59,-37,-38,-39,-31,-40,59,59,59,-33,-35,59,59,-36,59,-34,]),'LNOT':([15,21,35,39,40,41,52,57,58,59,60,68,69,70,71,74,75,76,77,78,79,80,81,82,83,84,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,115,124,127,146,147,148,149,152,159,160,161,168,169,173,174,175,176,177,178,179,181,185,186,187,188,189,191,192,193,195,196,197,],[-5,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-92,-93,-94,-95,-96,-97,-98,-99,-100,-101,-102,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,60,-114,60,60,60,-22,-23,-24,60,60,-30,-114,60,-25,-32,60,60,60,-37,-38,-39,-31,-40,60,60,60,-33,-35,60,60,-36,60,-34,]),'RBRACE':([15,115,145,146,147,148,149,156,157,158,159,160,161,169,171,172,173,177,178,179,181,185,189,191,195,197,],[-5,-114,155,-114,-22,-23,-24,-21,-26,-27,-28,-30,-114,-25,-29,181,-32,-37,-38,-39,-31,-40,-33,-35,-36,-34,]),'RBRACK':([31,33,34,36,37,38,42,43,44,45,46,47,48,49,50,51,53,54,55,56,72,73,86,87,90,91,92,98,110,111,112,113,117,118,119,120,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,153,154,],[67,-89,-52,-61,-87,-44,-85,-41,-42,-83,-110,-111,-112,-113,-81,-79,-76,-71,-68,-65,-48,-49,-54,-52,-103,-55,-56,-53,-57,-58,-59,-60,-88,-90,150,-46,-54,-86,-43,-84,-82,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,-91,-104,]),'LOR':([33,34,36,37,38,42,43,44,45,46,47,48,49,50,51,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,117,120,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[68,-52,-61,-87,-44,-85,-41,-42,-83,-110,-111,-112,-113,-81,-79,-76,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-88,-46,-54,-86,-43,-84,-82,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'DIVIDE':([34,36,38,43,44,46,47,48,49,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,108,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,108,108,-62,-63,-64,-45,-47,]),'MOD':([34,36,38,43,44,46,47,48,49,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,109,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,109,109,-62,-63,-64,-45,-47,]),'LSHIFT':([34,36,38,43,44,46,47,48,49,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,103,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,103,103,103,103,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'RSHIFT':([34,36,38,43,44,46,47,48,49,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,104,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,104,104,104,104,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'LE':([34,36,38,43,44,46,47,48,49,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,99,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,99,99,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'GE':([34,36,38,43,44,46,47,48,49,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,100,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,100,100,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'LEQ':([34,36,38,43,44,46,47,48,49,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,101,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,101,101,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'GEQ':([34,36,38,43,44,46,47,48,49,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,102,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,102,102,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'EQ':([34,36,38,43,44,46,47,48,49,51,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,96,-76,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,96,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'NE':([34,36,38,43,44,46,47,48,49,51,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,-110,-111,-112,-113,97,-76,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,97,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'XOR':([34,36,38,43,44,45,46,47,48,49,50,51,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,-41,-42,94,-110,-111,-112,-113,-81,-79,-76,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,94,-82,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'OR':([34,36,38,42,43,44,45,46,47,48,49,50,51,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,120,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,-44,93,-41,-42,-83,-110,-111,-112,-113,-81,-79,-76,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,93,-43,-84,-82,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'LAND':([34,36,37,38,42,43,44,45,46,47,48,49,50,51,53,54,55,56,72,73,86,87,91,92,98,110,111,112,113,117,120,123,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,],[-52,-61,88,-44,-85,-41,-42,-83,-110,-111,-112,-113,-81,-79,-76,-71,-68,-65,-48,-49,-54,-52,-55,-56,-53,-57,-58,-59,-60,88,-46,-54,-86,-43,-84,-82,-80,-77,-78,-72,-73,-74,-75,-69,-70,-66,-67,-62,-63,-64,-45,-47,]),'PLUS_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[75,-44,-41,-42,-110,-111,-112,-113,-48,-49,75,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'MINUS_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[76,-44,-41,-42,-110,-111,-112,-113,-48,-49,76,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'TIMES_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[77,-44,-41,-42,-110,-111,-112,-113,-48,-49,77,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'DIVIDE_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[78,-44,-41,-42,-110,-111,-112,-113,-48,-49,78,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'MOD_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[79,-44,-41,-42,-110,-111,-112,-113,-48,-49,79,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'AND_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[80,-44,-41,-42,-110,-111,-112,-113,-48,-49,80,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'OR_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[81,-44,-41,-42,-110,-111,-112,-113,-48,-49,81,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'XOR_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[82,-44,-41,-42,-110,-111,-112,-113,-48,-49,82,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'LSHIFT_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[83,-44,-41,-42,-110,-111,-112,-113,-48,-49,83,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'RSHIFT_ASSIGN':([34,38,43,44,46,47,48,49,72,73,86,87,91,92,98,110,111,112,113,120,123,126,150,151,],[84,-44,-41,-42,-110,-111,-112,-113,-48,-49,84,-52,-55,-56,-53,-57,-58,-59,-60,-46,-54,-43,-45,-47,]),'ELSE':([160,173,177,178,179,181,185,189,191,195,197,],[-30,-32,-37,-38,-39,-31,-40,-33,193,-36,-34,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'goal':([0,2,],[1,10,]),'def':([0,2,],[2,2,]),'defv':([0,2,115,149,161,],[3,3,149,149,149,]),'deff':([0,2,],[4,4,]),'type':([0,2,16,63,115,149,161,],[5,5,23,23,144,144,144,]),'defv_multi':([5,29,30,144,],[11,65,66,11,]),'id_adv':([5,14,23,29,30,144,],[12,22,61,64,64,64,]),'array':([12,61,64,],[17,114,17,]),'assign':([12,64,],[18,18,]),'empty':([12,16,61,64,115,146,161,],[19,25,19,19,147,157,147,]),'s_args':([16,],[24,]),'args':([16,63,],[27,116,]),'arg':([16,63,],[28,28,]),'expr':([21,39,69,70,71,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[32,90,118,90,122,153,154,90,170,90,90,90,90,90,90,90,90,90,90,90,]),'lorexpr':([21,39,69,70,71,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'postexpr':([21,35,39,40,41,52,57,58,59,60,68,69,70,71,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[34,87,34,87,87,87,87,87,87,87,87,34,34,34,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,87,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'unaryexpr':([21,35,39,40,41,52,57,58,59,60,68,69,70,71,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[36,86,36,91,92,98,110,111,112,113,36,36,36,36,123,36,36,36,36,36,36,36,36,36,36,36,36,36,36,141,142,143,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'landexpr':([21,39,68,69,70,71,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[37,37,117,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'priexpr':([21,35,39,40,41,52,57,58,59,60,68,69,70,71,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'orexpr':([21,39,68,69,70,71,88,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[42,42,42,42,42,42,125,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,]),'const':([21,35,39,40,41,52,57,58,59,60,68,69,70,71,85,88,93,94,95,96,97,99,100,101,102,103,104,105,106,107,108,109,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'xorexpr':([21,39,68,69,70,71,88,93,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[45,45,45,45,45,45,45,128,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'andexpr':([21,39,68,69,70,71,88,93,94,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[50,50,50,50,50,50,50,50,129,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),'eqexpr':([21,39,68,69,70,71,88,93,94,95,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[51,51,51,51,51,51,51,51,51,130,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'relexpr':([21,39,68,69,70,71,88,93,94,95,96,97,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[53,53,53,53,53,53,53,53,53,53,131,132,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,]),'shiftexpr':([21,39,68,69,70,71,88,93,94,95,96,97,99,100,101,102,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[54,54,54,54,54,54,54,54,54,54,54,54,133,134,135,136,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'addexpr':([21,39,68,69,70,71,88,93,94,95,96,97,99,100,101,102,103,104,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,137,138,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'multexpr':([21,39,68,69,70,71,88,93,94,95,96,97,99,100,101,102,103,104,105,106,124,127,146,152,159,168,174,175,176,186,187,188,192,193,196,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,139,140,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'assign_op':([34,86,],[69,124,]),'expr_many':([39,70,146,159,168,174,175,176,186,187,188,192,193,196,],[89,119,162,162,180,182,183,184,162,190,162,194,162,162,]),'argexpr_list':([71,],[121,]),'body':([115,161,],[145,172,]),'pre_defv_many':([115,161,],[146,146,]),'defv_many':([115,149,161,],[148,169,148,]),'pre_stmt_many':([146,],[156,]),'stmt_many':([146,159,],[158,171,]),'stmt':([146,159,186,188,193,196,],[159,159,189,191,195,197,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal","S'",1,None,None,None),
  ('goal -> def','goal',1,'p_goal_1','c_yacc.py',14),
  ('goal -> def goal','goal',2,'p_goal_2','c_yacc.py',19),
  ('def -> defv','def',1,'p_def','c_yacc.py',24),
  ('def -> deff','def',1,'p_def','c_yacc.py',25),
  ('defv -> type defv_multi SEMICOL','defv',3,'p_defv_1','c_yacc.py',31),
  ('defv_multi -> id_adv array','defv_multi',2,'p_defv_multi_1','c_yacc.py',36),
  ('defv_multi -> id_adv assign','defv_multi',2,'p_defv_multi_2','c_yacc.py',42),
  ('defv_multi -> id_adv array COMMA defv_multi','defv_multi',4,'p_defv_multi_3','c_yacc.py',47),
  ('defv_multi -> id_adv assign COMMA defv_multi','defv_multi',4,'p_defv_multi_4','c_yacc.py',53),
  ('id_adv -> ID','id_adv',1,'p_id_adv_1','c_yacc.py',58),
  ('id_adv -> TIMES id_adv','id_adv',2,'p_id_adv_2','c_yacc.py',63),
  ('array -> empty','array',1,'p_array_1','c_yacc.py',69),
  ('array -> LBRACK IVAL RBRACK','array',3,'p_array_2','c_yacc.py',74),
  ('deff -> type id_adv LPAREN s_args RPAREN LBRACE body RBRACE','deff',8,'p_deff','c_yacc.py',81),
  ('s_args -> empty','s_args',1,'p_s_args_1','c_yacc.py',87),
  ('s_args -> VOID','s_args',1,'p_s_args_1','c_yacc.py',88),
  ('s_args -> args','s_args',1,'p_s_args_2','c_yacc.py',93),
  ('args -> arg','args',1,'p_args_2','c_yacc.py',99),
  ('args -> arg COMMA args','args',3,'p_args_3','c_yacc.py',105),
  ('arg -> type id_adv array','arg',3,'p_arg','c_yacc.py',110),
  ('body -> pre_defv_many pre_stmt_many','body',2,'p_body_1','c_yacc.py',117),
  ('pre_defv_many -> empty','pre_defv_many',1,'p_pre_defv_many_1','c_yacc.py',122),
  ('pre_defv_many -> defv_many','pre_defv_many',1,'p_pre_defv_many_2','c_yacc.py',127),
  ('defv_many -> defv','defv_many',1,'p_defv_many_1','c_yacc.py',132),
  ('defv_many -> defv defv_many','defv_many',2,'p_defv_many_2','c_yacc.py',137),
  ('pre_stmt_many -> empty','pre_stmt_many',1,'p_pre_stmt_many_1','c_yacc.py',142),
  ('pre_stmt_many -> stmt_many','pre_stmt_many',1,'p_pre_stmt_many_2','c_yacc.py',147),
  ('stmt_many -> stmt','stmt_many',1,'p_stmt_many_1','c_yacc.py',152),
  ('stmt_many -> stmt stmt_many','stmt_many',2,'p_stmt_many_2','c_yacc.py',157),
  ('stmt -> SEMICOL','stmt',1,'p_stmt_1','c_yacc.py',162),
  ('stmt -> LBRACE body RBRACE','stmt',3,'p_stmt_2','c_yacc.py',167),
  ('stmt -> expr_many SEMICOL','stmt',2,'p_stmt_3','c_yacc.py',173),
  ('stmt -> WHILE LPAREN expr_many RPAREN stmt','stmt',5,'p_stmt_4','c_yacc.py',179),
  ('stmt -> FOR LPAREN expr_many SEMICOL expr_many SEMICOL expr_many RPAREN stmt','stmt',9,'p_stmt_5','c_yacc.py',185),
  ('stmt -> IF LPAREN expr_many RPAREN stmt','stmt',5,'p_stmt_6','c_yacc.py',191),
  ('stmt -> IF LPAREN expr_many RPAREN stmt ELSE stmt','stmt',7,'p_stmt_7','c_yacc.py',197),
  ('stmt -> CONTINUE SEMICOL','stmt',2,'p_stmt_8','c_yacc.py',203),
  ('stmt -> BREAK SEMICOL','stmt',2,'p_stmt_9','c_yacc.py',209),
  ('stmt -> RETURN SEMICOL','stmt',2,'p_stmt_10','c_yacc.py',215),
  ('stmt -> RETURN expr_many SEMICOL','stmt',3,'p_stmt_11','c_yacc.py',221),
  ('priexpr -> ID','priexpr',1,'p_priexpr_1','c_yacc.py',227),
  ('priexpr -> const','priexpr',1,'p_priexpr_2','c_yacc.py',232),
  ('priexpr -> LPAREN expr_many RPAREN','priexpr',3,'p_priexpr_3','c_yacc.py',237),
  ('postexpr -> priexpr','postexpr',1,'p_postexpr_1','c_yacc.py',243),
  ('postexpr -> postexpr LBRACK expr_many RBRACK','postexpr',4,'p_postexpr_2','c_yacc.py',249),
  ('postexpr -> postexpr LPAREN RPAREN','postexpr',3,'p_postexpr_3','c_yacc.py',255),
  ('postexpr -> postexpr LPAREN argexpr_list RPAREN','postexpr',4,'p_postexpr_4','c_yacc.py',261),
  ('postexpr -> postexpr INC','postexpr',2,'p_postexpr_5','c_yacc.py',266),
  ('postexpr -> postexpr DEC','postexpr',2,'p_postexpr_5','c_yacc.py',267),
  ('argexpr_list -> expr','argexpr_list',1,'p_argexpr_list_1','c_yacc.py',272),
  ('argexpr_list -> argexpr_list COMMA expr','argexpr_list',3,'p_argexpr_list_2','c_yacc.py',277),
  ('unaryexpr -> postexpr','unaryexpr',1,'p_unaryexpr_1','c_yacc.py',283),
  ('unaryexpr -> AND unaryexpr','unaryexpr',2,'p_unaryexpr_2','c_yacc.py',288),
  ('unaryexpr -> TIMES unaryexpr','unaryexpr',2,'p_unaryexpr_3','c_yacc.py',293),
  ('unaryexpr -> INC unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',298),
  ('unaryexpr -> DEC unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',299),
  ('unaryexpr -> PLUS unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',300),
  ('unaryexpr -> MINUS unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',301),
  ('unaryexpr -> NOT unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',302),
  ('unaryexpr -> LNOT unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',303),
  ('multexpr -> unaryexpr','multexpr',1,'p_multexpr_1','c_yacc.py',309),
  ('multexpr -> multexpr TIMES unaryexpr','multexpr',3,'p_multexpr_2','c_yacc.py',314),
  ('multexpr -> multexpr DIVIDE unaryexpr','multexpr',3,'p_multexpr_2','c_yacc.py',315),
  ('multexpr -> multexpr MOD unaryexpr','multexpr',3,'p_multexpr_2','c_yacc.py',316),
  ('addexpr -> multexpr','addexpr',1,'p_addexpr_1','c_yacc.py',322),
  ('addexpr -> addexpr PLUS multexpr','addexpr',3,'p_addexpr_2','c_yacc.py',327),
  ('addexpr -> addexpr MINUS multexpr','addexpr',3,'p_addexpr_2','c_yacc.py',328),
  ('shiftexpr -> addexpr','shiftexpr',1,'p_shiftexpr_1','c_yacc.py',334),
  ('shiftexpr -> shiftexpr LSHIFT addexpr','shiftexpr',3,'p_shiftexpr_2','c_yacc.py',339),
  ('shiftexpr -> shiftexpr RSHIFT addexpr','shiftexpr',3,'p_shiftexpr_2','c_yacc.py',340),
  ('relexpr -> shiftexpr','relexpr',1,'p_relexpr_1','c_yacc.py',346),
  ('relexpr -> relexpr LE shiftexpr','relexpr',3,'p_relexpr_2','c_yacc.py',351),
  ('relexpr -> relexpr GE shiftexpr','relexpr',3,'p_relexpr_2','c_yacc.py',352),
  ('relexpr -> relexpr LEQ shiftexpr','relexpr',3,'p_relexpr_2','c_yacc.py',353),
  ('relexpr -> relexpr GEQ shiftexpr','relexpr',3,'p_relexpr_2','c_yacc.py',354),
  ('eqexpr -> relexpr','eqexpr',1,'p_eqexpr_1','c_yacc.py',360),
  ('eqexpr -> eqexpr EQ relexpr','eqexpr',3,'p_eqexpr_2','c_yacc.py',365),
  ('eqexpr -> eqexpr NE relexpr','eqexpr',3,'p_eqexpr_2','c_yacc.py',366),
  ('andexpr -> eqexpr','andexpr',1,'p_andexpr_1','c_yacc.py',372),
  ('andexpr -> andexpr AND eqexpr','andexpr',3,'p_andexpr_2','c_yacc.py',377),
  ('xorexpr -> andexpr','xorexpr',1,'p_xorexpr_1','c_yacc.py',383),
  ('xorexpr -> xorexpr XOR andexpr','xorexpr',3,'p_xorexpr_2','c_yacc.py',388),
  ('orexpr -> xorexpr','orexpr',1,'p_orexpr_1','c_yacc.py',394),
  ('orexpr -> orexpr OR xorexpr','orexpr',3,'p_orexpr_2','c_yacc.py',399),
  ('landexpr -> orexpr','landexpr',1,'p_landexpr_1','c_yacc.py',405),
  ('landexpr -> landexpr LAND orexpr','landexpr',3,'p_landexpr_2','c_yacc.py',410),
  ('lorexpr -> landexpr','lorexpr',1,'p_lorexpr_1','c_yacc.py',416),
  ('lorexpr -> lorexpr LOR landexpr','lorexpr',3,'p_lorexpr_2','c_yacc.py',421),
  ('expr -> lorexpr','expr',1,'p_expr_1','c_yacc.py',427),
  ('expr -> postexpr assign_op expr','expr',3,'p_expr_2','c_yacc.py',432),
  ('expr -> TIMES unaryexpr assign_op expr','expr',4,'p_expr_3','c_yacc.py',444),
  ('assign_op -> ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',453),
  ('assign_op -> PLUS_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',454),
  ('assign_op -> MINUS_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',455),
  ('assign_op -> TIMES_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',456),
  ('assign_op -> DIVIDE_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',457),
  ('assign_op -> MOD_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',458),
  ('assign_op -> AND_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',459),
  ('assign_op -> OR_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',460),
  ('assign_op -> XOR_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',461),
  ('assign_op -> LSHIFT_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',462),
  ('assign_op -> RSHIFT_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',463),
  ('expr_many -> expr','expr_many',1,'p_expr_many_1','c_yacc.py',468),
  ('expr_many -> expr_many COMMA expr','expr_many',3,'p_expr_many_2','c_yacc.py',473),
  ('assign -> ASSIGN expr','assign',2,'p_assign_1','c_yacc.py',478),
  ('type -> INT','type',1,'p_type','c_yacc.py',483),
  ('type -> FLOAT','type',1,'p_type','c_yacc.py',484),
  ('type -> CHAR','type',1,'p_type','c_yacc.py',485),
  ('type -> VOID','type',1,'p_type','c_yacc.py',486),
  ('const -> IVAL','const',1,'p_const_1','c_yacc.py',491),
  ('const -> FVAL','const',1,'p_const_2','c_yacc.py',496),
  ('const -> SVAL','const',1,'p_const_3','c_yacc.py',501),
  ('const -> CVAL','const',1,'p_const_4','c_yacc.py',506),
  ('empty -> <empty>','empty',0,'p_empty','c_yacc.py',511),
]
