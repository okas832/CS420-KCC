
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPREC_IFleftELSEAND AND_ASSIGN ASSIGN BREAK CHAR COMMA CONTINUE CVAL DEC DIVIDE DIVIDE_ASSIGN ELSE EQ FLOAT FOR FVAL GE GEQ ID IF INC INT IVAL LAND LBRACE LBRACK LE LEQ LNOT LOR LPAREN LSHIFT LSHIFT_ASSIGN MINUS MINUS_ASSIGN MOD MOD_ASSIGN NE NOT OR OR_ASSIGN PLUS PLUS_ASSIGN RBRACE RBRACK RETURN RPAREN RSHIFT RSHIFT_ASSIGN SEMICOL SVAL TIMES TIMES_ASSIGN VOID WHILE XOR XOR_ASSIGNgoal : defgoal : def goaldef : defv\n           | deffdefv : type defv_multi SEMICOLdefv_multi : id_adv arraydefv_multi : id_adv assigndefv_multi : id_adv array COMMA defv_multidefv_multi : id_adv assign COMMA defv_multiid_adv : IDid_adv : TIMES id_advarray : emptyarray : LBRACK IVAL RBRACKdeff : type id_adv LPAREN s_args RPAREN LBRACE body RBRACEs_args : empty\n              | VOIDs_args : argsargs : argargs : arg COMMA argsarg : type id_adv arraybody : pre_defv_many pre_stmt_manypre_defv_many : emptypre_defv_many : defv_manydefv_many : defvdefv_many : defv defv_manypre_stmt_many : emptypre_stmt_many : stmt_manystmt_many : stmtstmt_many : stmt stmt_manystmt : SEMICOLstmt : LBRACE body RBRACEstmt : expr_many SEMICOLstmt : WHILE LPAREN expr_many RPAREN stmtstmt : FOR LPAREN expr_many SEMICOL expr_many SEMICOL expr_many RPAREN stmtstmt : IF LPAREN expr_many RPAREN stmt %prec PREC_IFstmt : IF LPAREN expr_many RPAREN stmt ELSE stmtstmt : CONTINUE SEMICOLstmt : BREAK SEMICOLstmt : RETURN SEMICOLstmt : RETURN expr_many SEMICOLpriexpr : IDpriexpr : constpriexpr : LPAREN expr_many RPARENpostexpr : priexprpostexpr : postexpr LBRACK expr_many RBRACKpostexpr : postexpr LPAREN RPARENpostexpr : postexpr LPAREN argexpr_list RPARENpostexpr : postexpr INC\n                | postexpr DECargexpr_list : exprargexpr_list : argexpr_list COMMA exprunaryexpr : postexprunaryexpr : AND unaryexprunaryexpr : TIMES unaryexprunaryexpr : INC unaryexpr\n                 | DEC unaryexpr\n                 | PLUS unaryexpr\n                 | MINUS unaryexpr\n                 | NOT unaryexpr\n                 | LNOT unaryexprmultexpr : unaryexprmultexpr : multexpr TIMES unaryexpr\n                | multexpr DIVIDE unaryexpr\n                | multexpr MOD unaryexpraddexpr : multexpraddexpr : addexpr PLUS multexpr\n               | addexpr MINUS multexprshiftexpr : addexprshiftexpr : shiftexpr LSHIFT addexpr\n                 | shiftexpr RSHIFT addexprrelexpr : shiftexprrelexpr : relexpr LE shiftexpr\n               | relexpr GE shiftexpr\n               | relexpr LEQ shiftexpr\n               | relexpr GEQ shiftexpreqexpr : relexpreqexpr : eqexpr EQ relexpr\n              | eqexpr NE relexprandexpr : eqexprandexpr : andexpr AND eqexprxorexpr : andexprxorexpr : xorexpr XOR andexprorexpr : xorexprorexpr : orexpr OR xorexprlandexpr : orexprlandexpr : landexpr LAND orexprlorexpr : landexprlorexpr : lorexpr LOR landexprexpr : lorexprexpr : postexpr assign_op exprexpr : TIMES unaryexpr assign_op exprassign_op : ASSIGN\n                 | PLUS_ASSIGN\n                 | MINUS_ASSIGN\n                 | TIMES_ASSIGN\n                 | DIVIDE_ASSIGN\n                 | MOD_ASSIGN\n                 | AND_ASSIGN\n                 | OR_ASSIGN\n                 | XOR_ASSIGN\n                 | LSHIFT_ASSIGN\n                 | RSHIFT_ASSIGNexpr_many : exprexpr_many : expr_many COMMA exprassign : ASSIGN exprtype : INT\n            | FLOAT\n            | CHAR\n            | VOIDconst : IVALconst : FVALconst : SVALconst : CVALempty :'
    
_lr_action_items = {'LPAREN':([11,12,15,20,22,32,34,35,37,40,42,45,46,47,48,49,51,52,53,55,57,58,67,68,71,72,74,76,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,107,109,110,111,112,116,119,120,124,131,144,145,147,148,152,153,154,155,156,158,159,161,164,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[17,-10,-5,32,-11,32,32,32,32,-110,-112,-42,32,32,84,32,-44,-41,-111,32,-113,32,32,32,32,84,32,32,32,32,32,32,32,-93,-100,-49,-96,-94,32,-102,-97,-92,-99,32,-101,-95,-98,-48,32,32,32,32,32,32,32,32,32,32,-114,32,-43,32,-46,-24,32,-22,-23,32,-47,-45,-25,171,32,32,176,178,-114,-30,32,-32,-39,32,-38,32,-37,-40,-31,32,32,32,-33,-35,32,32,-36,32,-34,]),'$end':([2,4,8,9,14,15,169,],[-3,0,-4,-1,-2,-5,-14,]),'PLUS_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,85,-44,-41,-111,-113,-52,-60,-57,85,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'NE':([31,39,40,42,44,45,48,50,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,122,123,127,128,131,134,135,136,137,138,140,141,142,143,153,154,],[-71,-61,-110,-112,-68,-42,-52,101,-44,-41,-111,-65,-113,-76,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-54,101,-67,-66,-46,-78,-77,-63,-64,-62,-75,-72,-73,-74,-47,-45,]),'LE':([31,39,40,42,44,45,48,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,122,127,128,131,134,135,136,137,138,140,141,142,143,153,154,],[-71,-61,-110,-112,-68,-42,-52,-44,-41,-111,-65,-113,110,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-54,-67,-66,-46,110,110,-63,-64,-62,-75,-72,-73,-74,-47,-45,]),'DIVIDE_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,88,-44,-41,-111,-113,-52,-60,-57,88,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'MOD_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,92,-44,-41,-111,-113,-52,-60,-57,92,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'WHILE':([15,116,144,145,147,148,155,159,165,168,172,174,177,180,182,185,186,188,189,191,193,195,196,197,],[-5,-114,-24,156,-22,-23,-25,156,-114,-30,-32,-39,-38,-37,-40,-31,156,156,-33,-35,156,-36,156,-34,]),'LSHIFT':([31,39,40,42,44,45,48,51,52,53,54,57,72,73,75,77,82,83,87,99,100,106,108,117,118,120,122,127,128,131,136,137,138,140,141,142,143,153,154,],[67,-61,-110,-112,-68,-42,-52,-44,-41,-111,-65,-113,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-54,-67,-66,-46,-63,-64,-62,67,67,67,67,-47,-45,]),'LNOT':([15,20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,107,109,110,111,112,116,119,124,144,145,147,148,152,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-93,-100,-96,-94,34,-102,-97,-92,-99,34,-101,-95,-98,34,34,34,34,34,34,34,34,34,34,-114,34,34,-24,34,-22,-23,34,-25,34,34,-114,-30,34,-32,-39,34,-38,34,-37,-40,-31,34,34,34,-33,-35,34,34,-36,34,-34,]),'RETURN':([15,116,144,145,147,148,155,159,165,168,172,174,177,180,182,185,186,188,189,191,193,195,196,197,],[-5,-114,-24,158,-22,-23,-25,158,-114,-30,-32,-39,-38,-37,-40,-31,158,158,-33,-35,158,-36,158,-34,]),'ELSE':([168,172,174,177,180,182,185,189,191,195,197,],[-30,-32,-39,-38,-37,-40,-31,-33,193,-36,-34,]),'LAND':([31,33,36,38,39,40,41,42,44,45,48,50,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,121,122,123,125,126,127,128,131,134,135,136,137,138,139,140,141,142,143,153,154,],[-71,-85,-81,-83,-61,-110,79,-112,-68,-42,-52,-79,-44,-41,-111,-65,-113,-76,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-84,-54,-80,-82,-86,-67,-66,-46,-78,-77,-63,-64,-62,79,-75,-72,-73,-74,-47,-45,]),'PLUS':([15,20,32,34,35,37,39,40,42,44,45,46,47,48,49,51,52,53,54,55,57,58,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,120,122,124,127,128,131,136,137,138,144,145,147,148,152,153,154,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,35,35,35,35,35,-61,-110,-112,81,-42,35,35,-52,35,-44,-41,-111,-65,35,-113,35,35,35,35,-52,-60,35,-57,35,-54,35,35,35,35,-55,-59,35,-93,-100,-49,-96,-94,35,-102,-97,-92,-99,35,-101,-95,-98,-48,-56,35,35,35,35,35,-58,35,-53,35,35,35,35,-114,81,81,35,-43,-54,35,-67,-66,-46,-63,-64,-62,-24,35,-22,-23,35,-47,-45,-25,35,35,-114,-30,35,-32,-39,35,-38,35,-37,-40,-31,35,35,35,-33,-35,35,35,-36,35,-34,]),'ASSIGN':([11,12,22,40,42,45,48,51,52,53,57,62,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[20,-10,-11,-110,-112,-42,93,-44,-41,-111,-113,20,-52,-60,-57,93,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'TIMES':([1,3,5,6,7,13,15,20,23,25,29,30,32,34,35,37,39,40,42,45,46,47,48,49,51,52,53,54,55,57,58,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,119,120,122,124,127,128,131,136,137,138,144,145,146,147,148,152,153,154,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-108,-109,13,-106,-107,13,-5,37,13,13,-109,13,37,74,74,74,-61,-110,-112,-42,74,74,-52,74,-44,-41,-111,105,74,-113,74,74,74,74,-52,-60,74,-57,74,-54,74,74,74,74,-55,-59,37,-93,-100,-49,-96,-94,37,-102,-97,-92,-99,37,-101,-95,-98,-48,-56,74,74,74,74,74,-58,74,-53,74,74,74,74,-114,37,-43,-54,37,105,105,-46,-63,-64,-62,-24,37,13,-22,-23,37,-47,-45,-25,37,37,-114,-30,37,-32,-39,37,-38,37,-37,-40,-31,37,37,37,-33,-35,37,37,-36,37,-34,]),'LEQ':([31,39,40,42,44,45,48,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,122,127,128,131,134,135,136,137,138,140,141,142,143,153,154,],[-71,-61,-110,-112,-68,-42,-52,-44,-41,-111,-65,-113,112,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-54,-67,-66,-46,112,112,-63,-64,-62,-75,-72,-73,-74,-47,-45,]),'RSHIFT_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,91,-44,-41,-111,-113,-52,-60,-57,91,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'GEQ':([31,39,40,42,44,45,48,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,122,127,128,131,134,135,136,137,138,140,141,142,143,153,154,],[-71,-61,-110,-112,-68,-42,-52,-44,-41,-111,-65,-113,109,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-54,-67,-66,-46,109,109,-63,-64,-62,-75,-72,-73,-74,-47,-45,]),'LSHIFT_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,96,-44,-41,-111,-113,-52,-60,-57,96,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'BREAK':([15,116,144,145,147,148,155,159,165,168,172,174,177,180,182,185,186,188,189,191,193,195,196,197,],[-5,-114,-24,162,-22,-23,-25,162,-114,-30,-32,-39,-38,-37,-40,-31,162,162,-33,-35,162,-36,162,-34,]),'IVAL':([15,20,21,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,107,109,110,111,112,116,119,124,144,145,147,148,152,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,40,60,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,-93,-100,-96,-94,40,-102,-97,-92,-99,40,-101,-95,-98,40,40,40,40,40,40,40,40,40,40,-114,40,40,-24,40,-22,-23,40,-25,40,40,-114,-30,40,-32,-39,40,-38,40,-37,-40,-31,40,40,40,-33,-35,40,40,-36,40,-34,]),'RBRACE':([15,116,144,145,147,148,149,155,159,160,163,165,167,168,172,174,175,177,179,180,182,185,189,191,195,197,],[-5,-114,-24,-114,-22,-23,169,-25,-28,-27,-26,-114,-21,-30,-32,-39,-29,-38,185,-37,-40,-31,-33,-35,-36,-34,]),'FOR':([15,116,144,145,147,148,155,159,165,168,172,174,177,180,182,185,186,188,189,191,193,195,196,197,],[-5,-114,-24,161,-22,-23,-25,161,-114,-30,-32,-39,-38,-37,-40,-31,161,161,-33,-35,161,-36,161,-34,]),'INT':([0,2,8,9,15,17,63,116,144,165,169,],[6,-3,-4,6,-5,6,6,6,6,6,-14,]),'FLOAT':([0,2,8,9,15,17,63,116,144,165,169,],[7,-3,-4,7,-5,7,7,7,7,7,-14,]),'DIVIDE':([39,40,42,45,48,51,52,53,54,57,72,73,75,77,82,83,87,99,100,106,108,120,122,127,128,131,136,137,138,153,154,],[-61,-110,-112,-42,-52,-44,-41,-111,103,-113,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-43,-54,103,103,-46,-63,-64,-62,-47,-45,]),'IF':([15,116,144,145,147,148,155,159,165,168,172,174,177,180,182,185,186,188,189,191,193,195,196,197,],[-5,-114,-24,164,-22,-23,-25,164,-114,-30,-32,-39,-38,-37,-40,-31,164,164,-33,-35,164,-36,164,-34,]),'COMMA':([11,12,16,18,19,22,24,31,33,36,38,39,40,41,42,43,44,45,48,50,51,52,53,54,56,57,59,62,64,69,70,72,73,75,77,82,83,87,99,100,106,108,113,115,117,118,120,121,122,123,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,153,154,157,170,173,181,183,184,190,194,],[-114,-10,23,-12,30,-11,63,-71,-85,-81,-83,-61,-110,-87,-112,-105,-68,-42,-52,-79,-44,-41,-111,-65,-89,-113,-76,-114,-114,119,-103,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-13,-20,-69,-70,-43,-84,-54,-80,-82,-86,-67,-66,152,-50,-46,119,-90,-78,-77,-63,-64,-62,-88,-75,-72,-73,-74,-104,-91,-47,-45,119,-51,119,119,119,119,119,119,]),'CONTINUE':([15,116,144,145,147,148,155,159,165,168,172,174,177,180,182,185,186,188,189,191,193,195,196,197,],[-5,-114,-24,166,-22,-23,-25,166,-114,-30,-32,-39,-38,-37,-40,-31,166,166,-33,-35,166,-36,166,-34,]),'MOD':([39,40,42,45,48,51,52,53,54,57,72,73,75,77,82,83,87,99,100,106,108,120,122,127,128,131,136,137,138,153,154,],[-61,-110,-112,-42,-52,-44,-41,-111,104,-113,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-43,-54,104,104,-46,-63,-64,-62,-47,-45,]),'INC':([15,20,32,34,35,37,40,42,45,46,47,48,49,51,52,53,55,57,58,67,68,71,72,74,76,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,107,109,110,111,112,116,119,120,124,131,144,145,147,148,152,153,154,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,46,46,46,46,46,-110,-112,-42,46,46,99,46,-44,-41,-111,46,-113,46,46,46,46,99,46,46,46,46,46,46,46,-93,-100,-49,-96,-94,46,-102,-97,-92,-99,46,-101,-95,-98,-48,46,46,46,46,46,46,46,46,46,46,-114,46,-43,46,-46,-24,46,-22,-23,46,-47,-45,-25,46,46,-114,-30,46,-32,-39,46,-38,46,-37,-40,-31,46,46,46,-33,-35,46,46,-36,46,-34,]),'EQ':([31,39,40,42,44,45,48,50,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,122,123,127,128,131,134,135,136,137,138,140,141,142,143,153,154,],[-71,-61,-110,-112,-68,-42,-52,102,-44,-41,-111,-65,-113,-76,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-54,102,-67,-66,-46,-78,-77,-63,-64,-62,-75,-72,-73,-74,-47,-45,]),'SVAL':([15,20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,107,109,110,111,112,116,119,124,144,145,147,148,152,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,42,-93,-100,-96,-94,42,-102,-97,-92,-99,42,-101,-95,-98,42,42,42,42,42,42,42,42,42,42,-114,42,42,-24,42,-22,-23,42,-25,42,42,-114,-30,42,-32,-39,42,-38,42,-37,-40,-31,42,42,42,-33,-35,42,42,-36,42,-34,]),'CHAR':([0,2,8,9,15,17,63,116,144,165,169,],[1,-3,-4,1,-5,1,1,1,1,1,-14,]),'NOT':([15,20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,107,109,110,111,112,116,119,124,144,145,147,148,152,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-93,-100,-96,-94,47,-102,-97,-92,-99,47,-101,-95,-98,47,47,47,47,47,47,47,47,47,47,-114,47,47,-24,47,-22,-23,47,-25,47,47,-114,-30,47,-32,-39,47,-38,47,-37,-40,-31,47,47,47,-33,-35,47,47,-36,47,-34,]),'TIMES_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,97,-44,-41,-111,-113,-52,-60,-57,97,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'DEC':([15,20,32,34,35,37,40,42,45,46,47,48,49,51,52,53,55,57,58,67,68,71,72,74,76,78,79,80,81,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,101,102,103,104,105,107,109,110,111,112,116,119,120,124,131,144,145,147,148,152,153,154,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,49,49,49,49,49,-110,-112,-42,49,49,87,49,-44,-41,-111,49,-113,49,49,49,49,87,49,49,49,49,49,49,49,-93,-100,-49,-96,-94,49,-102,-97,-92,-99,49,-101,-95,-98,-48,49,49,49,49,49,49,49,49,49,49,-114,49,-43,49,-46,-24,49,-22,-23,49,-47,-45,-25,49,49,-114,-30,49,-32,-39,49,-38,49,-37,-40,-31,49,49,49,-33,-35,49,49,-36,49,-34,]),'XOR_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,86,-44,-41,-111,-113,-52,-60,-57,86,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'GE':([31,39,40,42,44,45,48,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,122,127,128,131,134,135,136,137,138,140,141,142,143,153,154,],[-71,-61,-110,-112,-68,-42,-52,-44,-41,-111,-65,-113,111,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-54,-67,-66,-46,111,111,-63,-64,-62,-75,-72,-73,-74,-47,-45,]),'MINUS_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,89,-44,-41,-111,-113,-52,-60,-57,89,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'LBRACK':([11,12,22,40,42,45,48,51,52,53,57,62,64,72,87,99,120,131,153,154,],[21,-10,-11,-110,-112,-42,90,-44,-41,-111,-113,21,21,90,-49,-48,-43,-46,-47,-45,]),'CVAL':([15,20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,107,109,110,111,112,116,119,124,144,145,147,148,152,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,-93,-100,-96,-94,57,-102,-97,-92,-99,57,-101,-95,-98,57,57,57,57,57,57,57,57,57,57,-114,57,57,-24,57,-22,-23,57,-25,57,57,-114,-30,57,-32,-39,57,-38,57,-37,-40,-31,57,57,57,-33,-35,57,57,-36,57,-34,]),'OR_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,94,-44,-41,-111,-113,-52,-60,-57,94,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'AND_ASSIGN':([40,42,45,48,51,52,53,57,72,73,75,77,82,83,87,99,100,106,108,120,122,131,153,154,],[-110,-112,-42,98,-44,-41,-111,-113,-52,-60,-57,98,-55,-59,-49,-48,-56,-58,-53,-43,-54,-46,-47,-45,]),'ID':([1,3,5,6,7,13,15,20,23,25,29,30,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,107,109,110,111,112,116,119,124,144,145,146,147,148,152,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-108,-109,12,-106,-107,12,-5,52,12,12,-109,12,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,-93,-100,-96,-94,52,-102,-97,-92,-99,52,-101,-95,-98,52,52,52,52,52,52,52,52,52,52,-114,52,52,-24,52,12,-22,-23,52,-25,52,52,-114,-30,52,-32,-39,52,-38,52,-37,-40,-31,52,52,52,-33,-35,52,52,-36,52,-34,]),'FVAL':([15,20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,85,86,88,89,90,91,92,93,94,95,96,97,98,101,102,103,104,105,107,109,110,111,112,116,119,124,144,145,147,148,152,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,-93,-100,-96,-94,53,-102,-97,-92,-99,53,-101,-95,-98,53,53,53,53,53,53,53,53,53,53,-114,53,53,-24,53,-22,-23,53,-25,53,53,-114,-30,53,-32,-39,53,-38,53,-37,-40,-31,53,53,53,-33,-35,53,53,-36,53,-34,]),'VOID':([0,2,8,9,15,17,63,116,144,165,169,],[3,-3,-4,3,-5,29,3,3,3,3,-14,]),'LOR':([31,33,36,38,39,40,41,42,44,45,48,50,51,52,53,54,56,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,121,122,123,125,126,127,128,131,134,135,136,137,138,139,140,141,142,143,153,154,],[-71,-85,-81,-83,-61,-110,-87,-112,-68,-42,-52,-79,-44,-41,-111,-65,107,-113,-76,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-84,-54,-80,-82,-86,-67,-66,-46,-78,-77,-63,-64,-62,-88,-75,-72,-73,-74,-47,-45,]),'LBRACE':([15,65,116,144,145,147,148,155,159,165,168,172,174,177,180,182,185,186,188,189,191,193,195,196,197,],[-5,116,-114,-24,165,-22,-23,-25,165,-114,-30,-32,-39,-38,-37,-40,-31,165,165,-33,-35,165,-36,165,-34,]),'MINUS':([15,20,32,34,35,37,39,40,42,44,45,46,47,48,49,51,52,53,54,55,57,58,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,120,122,124,127,128,131,136,137,138,144,145,147,148,152,153,154,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,55,55,55,55,55,-61,-110,-112,80,-42,55,55,-52,55,-44,-41,-111,-65,55,-113,55,55,55,55,-52,-60,55,-57,55,-54,55,55,55,55,-55,-59,55,-93,-100,-49,-96,-94,55,-102,-97,-92,-99,55,-101,-95,-98,-48,-56,55,55,55,55,55,-58,55,-53,55,55,55,55,-114,80,80,55,-43,-54,55,-67,-66,-46,-63,-64,-62,-24,55,-22,-23,55,-47,-45,-25,55,55,-114,-30,55,-32,-39,55,-38,55,-37,-40,-31,55,55,55,-33,-35,55,55,-36,55,-34,]),'OR':([31,33,36,38,39,40,42,44,45,48,50,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,121,122,123,125,126,127,128,131,134,135,136,137,138,140,141,142,143,153,154,],[-71,71,-81,-83,-61,-110,-112,-68,-42,-52,-79,-44,-41,-111,-65,-113,-76,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-84,-54,-80,-82,71,-67,-66,-46,-78,-77,-63,-64,-62,-75,-72,-73,-74,-47,-45,]),'RBRACK':([31,33,36,38,39,40,41,42,44,45,48,50,51,52,53,54,56,57,59,60,70,72,73,75,77,82,83,87,99,100,106,108,117,118,120,121,122,123,125,126,127,128,131,132,133,134,135,136,137,138,139,140,141,142,143,150,151,153,154,],[-71,-85,-81,-83,-61,-110,-87,-112,-68,-42,-52,-79,-44,-41,-111,-65,-89,-113,-76,113,-103,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-84,-54,-80,-82,-86,-67,-66,-46,154,-90,-78,-77,-63,-64,-62,-88,-75,-72,-73,-74,-104,-91,-47,-45,]),'SEMICOL':([10,11,12,15,16,18,19,22,31,33,36,38,39,40,41,42,43,44,45,48,50,51,52,53,54,56,57,59,61,62,66,70,72,73,75,77,82,83,87,99,100,106,108,113,116,117,118,120,121,122,123,125,126,127,128,131,133,134,135,136,137,138,139,140,141,142,143,144,145,147,148,150,151,153,154,155,157,158,159,162,165,166,168,172,173,174,177,180,182,183,185,186,188,189,190,191,193,195,196,197,],[15,-114,-10,-5,-7,-12,-6,-11,-71,-85,-81,-83,-61,-110,-87,-112,-105,-68,-42,-52,-79,-44,-41,-111,-65,-89,-113,-76,-9,-114,-8,-103,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-13,-114,-69,-70,-43,-84,-54,-80,-82,-86,-67,-66,-46,-90,-78,-77,-63,-64,-62,-88,-75,-72,-73,-74,-24,168,-22,-23,-104,-91,-47,-45,-25,172,174,168,177,-114,180,-30,-32,182,-39,-38,-37,-40,187,-31,168,168,-33,192,-35,168,-36,168,-34,]),'AND':([15,20,31,32,34,35,36,37,39,40,42,44,45,46,47,48,49,50,51,52,53,54,55,57,58,59,67,68,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,116,117,118,119,120,122,123,124,125,127,128,131,134,135,136,137,138,140,141,142,143,144,145,147,148,152,153,154,155,158,159,165,168,171,172,174,176,177,178,180,182,185,186,187,188,189,191,192,193,195,196,197,],[-5,58,-71,58,58,58,76,58,-61,-110,-112,-68,-42,58,58,-52,58,-79,-44,-41,-111,-65,58,-113,58,-76,58,58,58,-52,-60,58,-57,58,-54,58,58,58,58,-55,-59,58,-93,-100,-49,-96,-94,58,-102,-97,-92,-99,58,-101,-95,-98,-48,-56,58,58,58,58,58,-58,58,-53,58,58,58,58,-114,-69,-70,58,-43,-54,-80,58,76,-67,-66,-46,-78,-77,-63,-64,-62,-75,-72,-73,-74,-24,58,-22,-23,58,-47,-45,-25,58,58,-114,-30,58,-32,-39,58,-38,58,-37,-40,-31,58,58,58,-33,-35,58,58,-36,58,-34,]),'XOR':([31,36,38,39,40,42,44,45,48,50,51,52,53,54,57,59,72,73,75,77,82,83,87,99,100,106,108,117,118,120,121,122,123,125,127,128,131,134,135,136,137,138,140,141,142,143,153,154,],[-71,-81,78,-61,-110,-112,-68,-42,-52,-79,-44,-41,-111,-65,-113,-76,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,78,-54,-80,-82,-67,-66,-46,-78,-77,-63,-64,-62,-75,-72,-73,-74,-47,-45,]),'RSHIFT':([31,39,40,42,44,45,48,51,52,53,54,57,72,73,75,77,82,83,87,99,100,106,108,117,118,120,122,127,128,131,136,137,138,140,141,142,143,153,154,],[68,-61,-110,-112,-68,-42,-52,-44,-41,-111,-65,-113,-52,-60,-57,-54,-55,-59,-49,-48,-56,-58,-53,-69,-70,-43,-54,-67,-66,-46,-63,-64,-62,68,68,68,68,-47,-45,]),'RPAREN':([12,17,18,22,24,26,27,28,29,31,33,36,38,39,40,41,42,44,45,48,50,51,52,53,54,56,57,59,64,69,70,72,73,75,77,82,83,84,87,99,100,106,108,113,114,115,117,118,120,121,122,123,125,126,127,128,129,130,131,133,134,135,136,137,138,139,140,141,142,143,150,151,153,154,170,181,184,194,],[-10,-114,-12,-11,-18,-15,65,-17,-16,-71,-85,-81,-83,-61,-110,-87,-112,-68,-42,-52,-79,-44,-41,-111,-65,-89,-113,-76,-114,120,-103,-52,-60,-57,-54,-55,-59,131,-49,-48,-56,-58,-53,-13,-19,-20,-69,-70,-43,-84,-54,-80,-82,-86,-67,-66,153,-50,-46,-90,-78,-77,-63,-64,-62,-88,-75,-72,-73,-74,-104,-91,-47,-45,-51,186,188,196,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'shiftexpr':([20,32,71,76,78,79,84,90,95,101,102,107,109,110,111,112,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[31,31,31,31,31,31,31,31,31,31,31,31,140,141,142,143,31,31,31,31,31,31,31,31,31,31,31,31,31,31,31,]),'assign':([11,62,],[16,16,]),'postexpr':([20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,90,95,101,102,103,104,105,107,109,110,111,112,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[48,48,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,72,48,48,48,72,72,72,72,72,72,72,72,72,72,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'pre_defv_many':([116,165,],[145,145,]),'defv_multi':([5,23,30,146,],[10,61,66,10,]),'goal':([0,9,],[4,14,]),'argexpr_list':([84,],[129,]),'addexpr':([20,32,67,68,71,76,78,79,84,90,95,101,102,107,109,110,111,112,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[44,44,117,118,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,]),'id_adv':([5,13,23,25,30,146,],[11,22,62,64,62,62,]),'arg':([17,63,],[24,24,]),'type':([0,9,17,63,116,144,165,],[5,5,25,25,146,146,146,]),'pre_stmt_many':([145,],[167,]),'multexpr':([20,32,67,68,71,76,78,79,80,81,84,90,95,101,102,107,109,110,111,112,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[54,54,54,54,54,54,54,54,127,128,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'s_args':([17,],[27,]),'defv_many':([116,144,165,],[148,155,148,]),'andexpr':([20,32,71,78,79,84,90,95,107,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[36,36,36,125,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'stmt':([145,159,186,188,193,196,],[159,159,189,191,195,197,]),'array':([11,62,64,],[19,19,115,]),'args':([17,63,],[28,114,]),'orexpr':([20,32,79,84,90,95,107,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[33,33,126,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'deff':([0,9,],[8,8,]),'body':([116,165,],[149,179,]),'def':([0,9,],[9,9,]),'defv':([0,9,116,144,165,],[2,2,144,144,144,]),'unaryexpr':([20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,90,95,101,102,103,104,105,107,109,110,111,112,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[39,39,73,75,77,82,83,100,106,108,39,39,39,122,39,39,39,39,39,39,39,39,39,39,136,137,138,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'priexpr':([20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,90,95,101,102,103,104,105,107,109,110,111,112,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'lorexpr':([20,32,84,90,95,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'landexpr':([20,32,84,90,95,107,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[41,41,41,41,41,139,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'stmt_many':([145,159,],[160,175,]),'xorexpr':([20,32,71,79,84,90,95,107,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[38,38,121,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'empty':([11,17,62,64,116,145,165,],[18,26,18,18,147,163,147,]),'assign_op':([48,77,],[95,124,]),'relexpr':([20,32,71,76,78,79,84,90,95,101,102,107,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[59,59,59,59,59,59,59,59,59,134,135,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'expr':([20,32,84,90,95,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[43,70,130,70,133,150,151,70,170,70,70,70,70,70,70,70,70,70,70,70,]),'expr_many':([32,90,145,158,159,171,176,178,186,187,188,192,193,196,],[69,132,157,173,157,181,183,184,157,190,157,194,157,157,]),'const':([20,32,34,35,37,46,47,49,55,58,67,68,71,74,76,78,79,80,81,84,90,95,101,102,103,104,105,107,109,110,111,112,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'eqexpr':([20,32,71,76,78,79,84,90,95,107,119,124,145,152,158,159,171,176,178,186,187,188,192,193,196,],[50,50,50,123,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> goal","S'",1,None,None,None),
  ('goal -> def','goal',1,'p_goal_1','c_yacc.py',14),
  ('goal -> def goal','goal',2,'p_goal_2','c_yacc.py',19),
  ('def -> defv','def',1,'p_def','c_yacc.py',24),
  ('def -> deff','def',1,'p_def','c_yacc.py',25),
  ('defv -> type defv_multi SEMICOL','defv',3,'p_defv_1','c_yacc.py',31),
  ('defv_multi -> id_adv array','defv_multi',2,'p_defv_multi_1','c_yacc.py',36),
  ('defv_multi -> id_adv assign','defv_multi',2,'p_defv_multi_2','c_yacc.py',42),
  ('defv_multi -> id_adv array COMMA defv_multi','defv_multi',4,'p_defv_multi_3','c_yacc.py',47),
  ('defv_multi -> id_adv assign COMMA defv_multi','defv_multi',4,'p_defv_multi_4','c_yacc.py',53),
  ('id_adv -> ID','id_adv',1,'p_id_adv_1','c_yacc.py',58),
  ('id_adv -> TIMES id_adv','id_adv',2,'p_id_adv_2','c_yacc.py',63),
  ('array -> empty','array',1,'p_array_1','c_yacc.py',69),
  ('array -> LBRACK IVAL RBRACK','array',3,'p_array_2','c_yacc.py',74),
  ('deff -> type id_adv LPAREN s_args RPAREN LBRACE body RBRACE','deff',8,'p_deff','c_yacc.py',81),
  ('s_args -> empty','s_args',1,'p_s_args_1','c_yacc.py',87),
  ('s_args -> VOID','s_args',1,'p_s_args_1','c_yacc.py',88),
  ('s_args -> args','s_args',1,'p_s_args_2','c_yacc.py',93),
  ('args -> arg','args',1,'p_args_2','c_yacc.py',99),
  ('args -> arg COMMA args','args',3,'p_args_3','c_yacc.py',105),
  ('arg -> type id_adv array','arg',3,'p_arg','c_yacc.py',110),
  ('body -> pre_defv_many pre_stmt_many','body',2,'p_body_1','c_yacc.py',117),
  ('pre_defv_many -> empty','pre_defv_many',1,'p_pre_defv_many_1','c_yacc.py',122),
  ('pre_defv_many -> defv_many','pre_defv_many',1,'p_pre_defv_many_2','c_yacc.py',127),
  ('defv_many -> defv','defv_many',1,'p_defv_many_1','c_yacc.py',132),
  ('defv_many -> defv defv_many','defv_many',2,'p_defv_many_2','c_yacc.py',137),
  ('pre_stmt_many -> empty','pre_stmt_many',1,'p_pre_stmt_many_1','c_yacc.py',142),
  ('pre_stmt_many -> stmt_many','pre_stmt_many',1,'p_pre_stmt_many_2','c_yacc.py',147),
  ('stmt_many -> stmt','stmt_many',1,'p_stmt_many_1','c_yacc.py',152),
  ('stmt_many -> stmt stmt_many','stmt_many',2,'p_stmt_many_2','c_yacc.py',157),
  ('stmt -> SEMICOL','stmt',1,'p_stmt_1','c_yacc.py',162),
  ('stmt -> LBRACE body RBRACE','stmt',3,'p_stmt_2','c_yacc.py',167),
  ('stmt -> expr_many SEMICOL','stmt',2,'p_stmt_3','c_yacc.py',173),
  ('stmt -> WHILE LPAREN expr_many RPAREN stmt','stmt',5,'p_stmt_4','c_yacc.py',179),
  ('stmt -> FOR LPAREN expr_many SEMICOL expr_many SEMICOL expr_many RPAREN stmt','stmt',9,'p_stmt_5','c_yacc.py',185),
  ('stmt -> IF LPAREN expr_many RPAREN stmt','stmt',5,'p_stmt_6','c_yacc.py',191),
  ('stmt -> IF LPAREN expr_many RPAREN stmt ELSE stmt','stmt',7,'p_stmt_7','c_yacc.py',197),
  ('stmt -> CONTINUE SEMICOL','stmt',2,'p_stmt_8','c_yacc.py',203),
  ('stmt -> BREAK SEMICOL','stmt',2,'p_stmt_9','c_yacc.py',209),
  ('stmt -> RETURN SEMICOL','stmt',2,'p_stmt_10','c_yacc.py',215),
  ('stmt -> RETURN expr_many SEMICOL','stmt',3,'p_stmt_11','c_yacc.py',221),
  ('priexpr -> ID','priexpr',1,'p_priexpr_1','c_yacc.py',227),
  ('priexpr -> const','priexpr',1,'p_priexpr_2','c_yacc.py',232),
  ('priexpr -> LPAREN expr_many RPAREN','priexpr',3,'p_priexpr_3','c_yacc.py',237),
  ('postexpr -> priexpr','postexpr',1,'p_postexpr_1','c_yacc.py',243),
  ('postexpr -> postexpr LBRACK expr_many RBRACK','postexpr',4,'p_postexpr_2','c_yacc.py',249),
  ('postexpr -> postexpr LPAREN RPAREN','postexpr',3,'p_postexpr_3','c_yacc.py',255),
  ('postexpr -> postexpr LPAREN argexpr_list RPAREN','postexpr',4,'p_postexpr_4','c_yacc.py',261),
  ('postexpr -> postexpr INC','postexpr',2,'p_postexpr_5','c_yacc.py',266),
  ('postexpr -> postexpr DEC','postexpr',2,'p_postexpr_5','c_yacc.py',267),
  ('argexpr_list -> expr','argexpr_list',1,'p_argexpr_list_1','c_yacc.py',272),
  ('argexpr_list -> argexpr_list COMMA expr','argexpr_list',3,'p_argexpr_list_2','c_yacc.py',277),
  ('unaryexpr -> postexpr','unaryexpr',1,'p_unaryexpr_1','c_yacc.py',283),
  ('unaryexpr -> AND unaryexpr','unaryexpr',2,'p_unaryexpr_2','c_yacc.py',288),
  ('unaryexpr -> TIMES unaryexpr','unaryexpr',2,'p_unaryexpr_3','c_yacc.py',293),
  ('unaryexpr -> INC unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',298),
  ('unaryexpr -> DEC unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',299),
  ('unaryexpr -> PLUS unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',300),
  ('unaryexpr -> MINUS unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',301),
  ('unaryexpr -> NOT unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',302),
  ('unaryexpr -> LNOT unaryexpr','unaryexpr',2,'p_unaryexpr_4','c_yacc.py',303),
  ('multexpr -> unaryexpr','multexpr',1,'p_multexpr_1','c_yacc.py',309),
  ('multexpr -> multexpr TIMES unaryexpr','multexpr',3,'p_multexpr_2','c_yacc.py',314),
  ('multexpr -> multexpr DIVIDE unaryexpr','multexpr',3,'p_multexpr_2','c_yacc.py',315),
  ('multexpr -> multexpr MOD unaryexpr','multexpr',3,'p_multexpr_2','c_yacc.py',316),
  ('addexpr -> multexpr','addexpr',1,'p_addexpr_1','c_yacc.py',322),
  ('addexpr -> addexpr PLUS multexpr','addexpr',3,'p_addexpr_2','c_yacc.py',327),
  ('addexpr -> addexpr MINUS multexpr','addexpr',3,'p_addexpr_2','c_yacc.py',328),
  ('shiftexpr -> addexpr','shiftexpr',1,'p_shiftexpr_1','c_yacc.py',334),
  ('shiftexpr -> shiftexpr LSHIFT addexpr','shiftexpr',3,'p_shiftexpr_2','c_yacc.py',339),
  ('shiftexpr -> shiftexpr RSHIFT addexpr','shiftexpr',3,'p_shiftexpr_2','c_yacc.py',340),
  ('relexpr -> shiftexpr','relexpr',1,'p_relexpr_1','c_yacc.py',346),
  ('relexpr -> relexpr LE shiftexpr','relexpr',3,'p_relexpr_2','c_yacc.py',351),
  ('relexpr -> relexpr GE shiftexpr','relexpr',3,'p_relexpr_2','c_yacc.py',352),
  ('relexpr -> relexpr LEQ shiftexpr','relexpr',3,'p_relexpr_2','c_yacc.py',353),
  ('relexpr -> relexpr GEQ shiftexpr','relexpr',3,'p_relexpr_2','c_yacc.py',354),
  ('eqexpr -> relexpr','eqexpr',1,'p_eqexpr_1','c_yacc.py',360),
  ('eqexpr -> eqexpr EQ relexpr','eqexpr',3,'p_eqexpr_2','c_yacc.py',365),
  ('eqexpr -> eqexpr NE relexpr','eqexpr',3,'p_eqexpr_2','c_yacc.py',366),
  ('andexpr -> eqexpr','andexpr',1,'p_andexpr_1','c_yacc.py',372),
  ('andexpr -> andexpr AND eqexpr','andexpr',3,'p_andexpr_2','c_yacc.py',377),
  ('xorexpr -> andexpr','xorexpr',1,'p_xorexpr_1','c_yacc.py',383),
  ('xorexpr -> xorexpr XOR andexpr','xorexpr',3,'p_xorexpr_2','c_yacc.py',388),
  ('orexpr -> xorexpr','orexpr',1,'p_orexpr_1','c_yacc.py',394),
  ('orexpr -> orexpr OR xorexpr','orexpr',3,'p_orexpr_2','c_yacc.py',399),
  ('landexpr -> orexpr','landexpr',1,'p_landexpr_1','c_yacc.py',405),
  ('landexpr -> landexpr LAND orexpr','landexpr',3,'p_landexpr_2','c_yacc.py',410),
  ('lorexpr -> landexpr','lorexpr',1,'p_lorexpr_1','c_yacc.py',416),
  ('lorexpr -> lorexpr LOR landexpr','lorexpr',3,'p_lorexpr_2','c_yacc.py',421),
  ('expr -> lorexpr','expr',1,'p_expr_1','c_yacc.py',427),
  ('expr -> postexpr assign_op expr','expr',3,'p_expr_2','c_yacc.py',432),
  ('expr -> TIMES unaryexpr assign_op expr','expr',4,'p_expr_3','c_yacc.py',444),
  ('assign_op -> ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',453),
  ('assign_op -> PLUS_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',454),
  ('assign_op -> MINUS_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',455),
  ('assign_op -> TIMES_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',456),
  ('assign_op -> DIVIDE_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',457),
  ('assign_op -> MOD_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',458),
  ('assign_op -> AND_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',459),
  ('assign_op -> OR_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',460),
  ('assign_op -> XOR_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',461),
  ('assign_op -> LSHIFT_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',462),
  ('assign_op -> RSHIFT_ASSIGN','assign_op',1,'p_assign_op','c_yacc.py',463),
  ('expr_many -> expr','expr_many',1,'p_expr_many_1','c_yacc.py',468),
  ('expr_many -> expr_many COMMA expr','expr_many',3,'p_expr_many_2','c_yacc.py',473),
  ('assign -> ASSIGN expr','assign',2,'p_assign_1','c_yacc.py',478),
  ('type -> INT','type',1,'p_type','c_yacc.py',483),
  ('type -> FLOAT','type',1,'p_type','c_yacc.py',484),
  ('type -> CHAR','type',1,'p_type','c_yacc.py',485),
  ('type -> VOID','type',1,'p_type','c_yacc.py',486),
  ('const -> IVAL','const',1,'p_const_1','c_yacc.py',491),
  ('const -> FVAL','const',1,'p_const_2','c_yacc.py',496),
  ('const -> SVAL','const',1,'p_const_3','c_yacc.py',501),
  ('const -> CVAL','const',1,'p_const_4','c_yacc.py',506),
  ('empty -> <empty>','empty',0,'p_empty','c_yacc.py',511),
]
